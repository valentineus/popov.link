---
import { type CollectionEntry, getCollection } from "astro:content";
import Comments from "../../components/Comments.astro";
import Layout from "../../layouts/BaseLayout.astro";
import blogPostSchema from "../../utils/schemas/blogPostSchema";
import dayjs from "dayjs";

type Props = CollectionEntry<"blog">;

export async function getStaticPaths() {
	const posts = await getCollection("blog", ({ data }) => {
		return data.draft !== true;
	});

	return posts.map((post) => ({
		params: { slug: post.slug },
		props: post,
	}));
}

const post = Astro.props;

const { Content, remarkPluginFrontmatter } = await post.render();

const description = post.data.description;
const isBasedOn = post.data.basedOn;
const lang = post.data.lang;
const preview = `/images/preview/${post.slug}.png`;
const slug = post.slug;
const title = post.data.title;

const dateModified = post.data.dateModified?.toISOString();
const datePublished = post.data.datePublished.toISOString();
const formattedDate = dayjs(post.data.datePublished.toString()).format("MMMM DD, YYYY");

const schema = blogPostSchema({
	siteUrl: new URL("/", Astro.site).toString(),
	dateModified,
	datePublished,
	description,
	isBasedOn,
	lang,
	preview,
	slug,
	title,
});
---

<style lang="scss">
	@use "../../scss/variables" as *;

	p {
		opacity: 0.5;
	}
</style>

<Layout title={title} description={description} preview={preview} lang={lang} schema={schema}>
	<article>
		<header>
			<h1>{title}</h1>

			<p>
				<small>
					Posted
					<time datetime={datePublished} lang="en">{formattedDate}</time>
					<span>&nbsp;â€¢&nbsp;</span>
					<span>{remarkPluginFrontmatter.minutesRead}</span>
				</small>
			</p>
		</header>

		<section>
			<Content />
		</section>

		<section>
			<Comments />
		</section>
	</article>
</Layout>
